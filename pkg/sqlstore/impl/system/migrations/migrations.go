// Code generated by go-bindata. (@generated) DO NOT EDIT.

 //Package migrations generated by go-bindata.// sources:
// migrations/001_init.down.sql
// migrations/001_init.up.sql
// migrations/002_add_type_column.down.sql
// migrations/002_add_type_column.up.sql
// migrations/003_auth.down.sql
// migrations/003_auth.up.sql
// migrations/004_add_last_seen.down.sql
// migrations/004_add_last_seen.up.sql
// migrations/005_mul_changes.down.sql
// migrations/005_mul_changes.up.sql
// migrations/006_rename_system_tables.down.sql
// migrations/006_rename_system_tables.up.sql
// migrations/007_acl.down.sql
// migrations/007_acl.up.sql
// migrations/008_txn_processor.down.sql
// migrations/008_txn_processor.up.sql
// migrations/009_nonce.down.sql
// migrations/009_nonce.up.sql
// migrations/010_receipt.down.sql
// migrations/010_receipt.up.sql
// migrations/011_new_create_table_flow.down.sql
// migrations/011_new_create_table_flow.up.sql
// migrations/012_chainid_scoping.down.sql
// migrations/012_chanid_scoping.up.sql
// migrations/013_chainid_rename_tables.down.sql
// migrations/013_chanid_rename_tables.up.sql
// migrations/migrations_test.go
package migrations

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var __001_initDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\x28\xae\x2c\x2e\x49\xcd\x8d\x2f\x49\x4c\xca\x49\x2d\xb6\x06\x04\x00\x00\xff\xff\x63\xc3\x98\x16\x19\x00\x00\x00")

func _001_initDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__001_initDownSql,
		"001_init.down.sql",
	)
}

func _001_initDownSql() (*asset, error) {
	bytes, err := _001_initDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "001_init.down.sql", size: 25, mode: os.FileMode(436), modTime: time.Unix(1639565921, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __001_initUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\xbd\x0a\xc2\x30\x14\x47\xf1\xbd\x4f\xf1\x1f\x5b\x70\x12\x37\xa7\x6b\x7b\x8b\xc1\xf4\x83\xf4\x06\xed\x54\xaa\xcd\x20\x54\x0b\x49\x3a\xf8\xf6\x42\x11\xe7\xf3\xe3\xe4\x86\x49\x18\x42\x27\xcd\x50\x25\xea\x46\xc0\x37\xd5\x49\x87\xf0\x09\xd1\xbd\x86\x38\xde\x67\x17\x90\x26\x00\xb0\xae\xcf\x09\xd6\xaa\x02\xad\x51\x15\x99\x1e\x17\xee\x77\x5b\x7a\x2c\xef\xe8\x97\x79\x76\x1e\xf9\x99\x4c\x7a\xd8\x67\xdb\xad\xb6\x5a\xff\x84\x77\x63\x74\xd3\x30\x46\x88\xaa\xb8\x13\xaa\xda\x3f\x41\xc1\x25\x59\x2d\xa8\x9b\x6b\x9a\x25\xd9\x31\xf9\x06\x00\x00\xff\xff\xf0\xb8\x01\x4a\x9b\x00\x00\x00")

func _001_initUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__001_initUpSql,
		"001_init.up.sql",
	)
}

func _001_initUpSql() (*asset, error) {
	bytes, err := _001_initUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "001_init.up.sql", size: 155, mode: os.FileMode(436), modTime: time.Unix(1639565921, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __002_add_type_columnDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\xae\x2c\x2e\x49\xcd\x8d\x2f\x49\x4c\xca\x49\x2d\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x53\x28\xa9\x2c\x48\xb5\x06\x04\x00\x00\xff\xff\xc5\x40\xfa\x41\x2b\x00\x00\x00")

func _002_add_type_columnDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__002_add_type_columnDownSql,
		"002_add_type_column.down.sql",
	)
}

func _002_add_type_columnDownSql() (*asset, error) {
	bytes, err := _002_add_type_columnDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "002_add_type_column.down.sql", size: 43, mode: os.FileMode(436), modTime: time.Unix(1642447553, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __002_add_type_columnUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\xae\x2c\x2e\x49\xcd\x8d\x2f\x49\x4c\xca\x49\x2d\x56\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x53\x28\xa9\x2c\x48\x55\x08\x73\x0c\x72\xf6\x70\x0c\xd2\x30\x36\xd2\x54\x70\x71\x75\x73\x0c\xf5\x09\x51\x50\x57\xb7\x06\x04\x00\x00\xff\xff\xcb\x6f\x28\xcf\x41\x00\x00\x00")

func _002_add_type_columnUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__002_add_type_columnUpSql,
		"002_add_type_column.up.sql",
	)
}

func _002_add_type_columnUpSql() (*asset, error) {
	bytes, err := _002_add_type_columnUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "002_add_type_column.up.sql", size: 65, mode: os.FileMode(436), modTime: time.Unix(1642447553, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __003_authDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\x28\xae\x2c\x2e\x49\xcd\x8d\x4f\x2c\x2d\xc9\xb0\x06\x04\x00\x00\xff\xff\x05\x69\x1f\x3a\x17\x00\x00\x00")

func _003_authDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__003_authDownSql,
		"003_auth.down.sql",
	)
}

func _003_authDownSql() (*asset, error) {
	bytes, err := _003_authDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "003_auth.down.sql", size: 23, mode: os.FileMode(436), modTime: time.Unix(1643658422, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __003_authUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x1c\xcc\x31\x0a\xc3\x20\x18\x05\xe0\xdd\x53\xbc\x31\x81\xde\xa0\x93\x6d\xff\x80\x54\x4d\xd0\x17\x9a\x4c\x41\xaa\xd0\xa5\x4b\xb4\x43\x6f\x1f\xc8\xfc\xc1\x77\x0f\xa2\x29\xa0\xbe\x59\x81\x19\xe0\x47\x42\x16\x13\x19\x51\xff\xb5\x95\xef\x96\x7e\xed\x83\x4e\x01\x40\xca\x79\x2f\xb5\x82\xb2\x10\x53\x30\x4e\x87\x15\x4f\x59\x2f\xa7\xbe\xf7\x92\x5a\xc9\x5b\x6a\xa0\x71\x12\xa9\xdd\x74\x7e\x7e\xb6\x16\x0f\x19\xf4\x6c\x09\x3f\xbe\xba\x5e\xf5\x57\x75\x04\x00\x00\xff\xff\x41\x41\x30\x05\x7a\x00\x00\x00")

func _003_authUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__003_authUpSql,
		"003_auth.up.sql",
	)
}

func _003_authUpSql() (*asset, error) {
	bytes, err := _003_authUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "003_auth.up.sql", size: 122, mode: os.FileMode(436), modTime: time.Unix(1643658422, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __004_add_last_seenDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\xae\x2c\x2e\x49\xcd\x8d\x4f\x2c\x2d\xc9\xe0\x72\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x53\xc8\x49\x2c\x2e\x89\x2f\x4e\x4d\xcd\xd3\x41\x11\x4e\x2e\x4a\x4d\x2c\x49\x8d\x2f\x49\x4c\xca\x49\x8d\x4f\xce\x2f\xcd\x2b\x41\x95\x2f\x2a\xcd\x8b\x2f\x2e\xcc\x81\x48\x59\x73\x01\x02\x00\x00\xff\xff\x22\x83\x83\x02\x6a\x00\x00\x00")

func _004_add_last_seenDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__004_add_last_seenDownSql,
		"004_add_last_seen.down.sql",
	)
}

func _004_add_last_seenDownSql() (*asset, error) {
	bytes, err := _004_add_last_seenDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "004_add_last_seen.down.sql", size: 106, mode: os.FileMode(436), modTime: time.Unix(1643747041, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __004_add_last_seenUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xcb\xb1\x0a\x02\x31\x0c\x00\xd0\xdd\xaf\xc8\x07\x38\xb8\x3b\x55\x1b\xe5\x20\xed\xc9\x99\xce\xa5\x1e\x01\x87\x5a\xf1\x92\x0e\xfe\xbd\x83\x20\x3a\xb9\xbf\xe7\x88\x71\x02\x76\x3b\x42\xd0\xa7\x9a\xdc\x72\xe9\x76\x5d\x39\xef\x61\x3f\x52\x0a\x11\x6a\x51\xcb\x2a\xd2\x80\x87\x80\x67\x76\xe1\x04\x1e\x0f\x2e\x11\x43\x4c\x44\xeb\x6f\x3c\x2f\x52\x4c\xb2\x95\x4b\x95\x3c\xdf\x7b\x33\x18\x22\xe3\x11\x27\x88\xe3\xdb\x7f\xf2\xe6\x67\x2e\xbd\x65\x7d\xd4\xbf\x69\xfb\x0a\x00\x00\xff\xff\x6a\x5a\x53\xf4\xb3\x00\x00\x00")

func _004_add_last_seenUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__004_add_last_seenUpSql,
		"004_add_last_seen.up.sql",
	)
}

func _004_add_last_seenUpSql() (*asset, error) {
	bytes, err := _004_add_last_seenUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "004_add_last_seen.up.sql", size: 179, mode: os.FileMode(436), modTime: time.Unix(1643747041, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __005_mul_changesDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xcd\xb1\xae\x82\x30\x18\xc5\xf1\x9d\xa7\x38\x1b\xf7\xae\x3a\x32\x7d\xd2\x1a\x89\x45\x48\x43\x4d\x98\x0c\xd2\x0e\x4d\x04\x49\xfb\x75\xe0\xed\x9d\x5c\x4d\xf7\xdf\x39\x7f\x52\x83\xd4\x18\xe8\xa4\x24\xe2\x1e\xd9\x2d\x0f\x9e\x9e\x2f\x17\x21\x74\xd7\xa3\xee\x94\x69\x6f\x58\xa7\xc5\x55\x45\x9e\xb5\x2e\xce\xc1\x6f\xec\xdf\x6b\xee\x24\x72\x48\x33\xa7\x90\xdd\xf0\xf6\x97\x24\x21\xbe\x90\xf7\xcd\xe1\x4e\xf5\x85\xf4\xdf\xf1\xf0\x0f\x21\xcf\x64\xd4\x80\xb2\xcc\x3c\x48\xc9\x5b\x18\xd3\x08\xf4\xba\x69\x49\x8f\xb8\xca\xb1\x2a\x3e\x01\x00\x00\xff\xff\x5e\x26\x53\xb7\x37\x01\x00\x00")

func _005_mul_changesDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__005_mul_changesDownSql,
		"005_mul_changes.down.sql",
	)
}

func _005_mul_changesDownSql() (*asset, error) {
	bytes, err := _005_mul_changesDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "005_mul_changes.down.sql", size: 311, mode: os.FileMode(436), modTime: time.Unix(1644364111, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __005_mul_changesUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\xcf\x3d\x8b\x83\x30\x1c\xc7\xf1\xdd\x57\xf1\x1f\x75\xcb\xc1\x9d\xcb\x71\x07\x69\x0c\x28\xc6\x28\x41\x0b\x4e\xc5\x9a\x0c\x01\x9f\xc8\xc3\xe0\xbb\xef\xd4\x4a\x97\x92\xd2\xfd\xf7\xfd\xc0\x0f\xb3\x96\x0a\x68\xf1\x89\x51\xb0\xbb\x75\x6a\xbe\xb8\xe1\x3a\x29\x0b\x99\xa8\x1b\x20\x35\xeb\x2a\x0e\x6e\xdf\xd4\x6f\x14\xb6\xf5\x5e\xcb\xd0\xed\xb8\x2e\xce\xac\xd3\xa4\xcc\xab\x02\x67\xd9\x3d\xd0\x12\x78\x57\x51\x51\x90\x38\x45\x09\x34\xa2\xa8\xb0\xe8\xa1\xa4\x3d\x90\x9c\x92\x12\x62\x2d\xe1\xff\x0f\x50\x12\x08\x5a\x67\xfc\xe8\xbc\x51\x70\xc6\x82\xe4\x58\xc4\xe9\x77\x02\xbc\x6e\x81\x77\x8c\x05\x22\xc7\x8d\x4f\x14\xa9\xec\x68\xf4\xe6\xf4\xba\x3c\x98\x2f\x84\xde\x76\x96\x61\x3e\xde\xfc\x3c\xf5\xd1\x2d\x00\x00\xff\xff\x21\x31\xf0\x51\xef\x01\x00\x00")

func _005_mul_changesUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__005_mul_changesUpSql,
		"005_mul_changes.up.sql",
	)
}

func _005_mul_changesUpSql() (*asset, error) {
	bytes, err := _005_mul_changesUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "005_mul_changes.up.sql", size: 495, mode: os.FileMode(436), modTime: time.Unix(1644364111, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __006_rename_system_tablesDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x4a\x4d\xcf\x2c\x2e\x29\xaa\x54\x08\x72\xf5\x73\xf4\x75\x55\x08\xf1\x57\x28\xae\x2c\x2e\x49\xcd\x8d\x2f\x49\x4c\xca\x49\x2d\xb6\x06\x04\x00\x00\xff\xff\x72\x91\x5f\x1b\x2d\x00\x00\x00")

func _006_rename_system_tablesDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__006_rename_system_tablesDownSql,
		"006_rename_system_tables.down.sql",
	)
}

func _006_rename_system_tablesDownSql() (*asset, error) {
	bytes, err := _006_rename_system_tablesDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "006_rename_system_tables.down.sql", size: 45, mode: os.FileMode(436), modTime: time.Unix(1645722059, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __006_rename_system_tablesUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\xae\x2c\x2e\x49\xcd\x8d\x2f\x49\x4c\xca\x49\x2d\x56\x08\x72\xf5\x73\xf4\x75\x55\x08\xf1\x57\x28\x4a\x4d\xcf\x2c\x2e\x29\xaa\xb4\x06\x04\x00\x00\xff\xff\x71\x64\x77\x61\x2d\x00\x00\x00")

func _006_rename_system_tablesUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__006_rename_system_tablesUpSql,
		"006_rename_system_tables.up.sql",
	)
}

func _006_rename_system_tablesUpSql() (*asset, error) {
	bytes, err := _006_rename_system_tablesUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "006_rename_system_tables.up.sql", size: 45, mode: os.FileMode(436), modTime: time.Unix(1645722059, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __007_aclDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\x28\xae\x2c\x2e\x49\xcd\x8d\x4f\x4c\xce\xb1\x06\x04\x00\x00\xff\xff\xa9\xfc\x80\xcd\x16\x00\x00\x00")

func _007_aclDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__007_aclDownSql,
		"007_acl.down.sql",
	)
}

func _007_aclDownSql() (*asset, error) {
	bytes, err := _007_aclDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "007_acl.down.sql", size: 22, mode: os.FileMode(436), modTime: time.Unix(1649682178, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __007_aclUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x90\x41\x4f\xc2\x40\x14\x84\xef\xfb\x2b\xe6\x46\x9b\xf4\xe0\xc9\x0b\xa7\xa5\xbe\xea\xc6\xee\x96\xec\x3e\x14\x62\x0c\xa9\x74\x43\x9a\x54\x21\xdb\x55\x43\x8c\xff\xdd\x00\x4a\x51\xcf\xf3\xcd\xbc\x37\x33\xa1\x6b\x65\xc6\x42\xe4\x96\x24\x13\x58\x4e\x4a\x82\x2a\x60\x2a\x06\xcd\x95\x63\x87\x7e\xd7\x47\xff\xbc\xac\x57\x1d\x12\x01\x00\xb1\x7e\xea\xfc\xb2\x6d\x60\x66\x9a\xac\xca\x93\xcb\x8b\x14\x96\x0a\xb2\x64\x72\x72\x08\x7e\xdd\xf6\x31\xec\x92\xb6\x49\xb3\x83\x63\xb5\x79\x89\x61\xd3\x75\x3e\x80\x69\xce\x87\x74\x33\x2b\xcb\xa3\xba\x0d\xed\x5b\xdb\xf9\xb5\xef\x71\x27\x6d\x7e\x23\xed\xc3\xe3\x1f\x64\x15\x7c\x1d\x7d\xb3\xac\x23\x58\x69\x72\x2c\xf5\xf4\x84\xe0\x8a\x0a\x39\x2b\xf7\xb1\xf7\xc9\xf7\xc5\xd7\x6d\xf3\xcf\x70\x54\xa6\x56\x69\x69\x17\xb8\xa5\x45\xf2\xd3\x24\x3b\xfb\x30\x15\xe9\x58\x08\x65\x1c\x59\x86\x32\x5c\xfd\x1a\x60\xe0\x32\x0c\xee\xa1\x41\x0a\x47\x25\xe5\x8c\x73\x70\x8f\x8c\x3e\xea\x0c\xef\x19\x9a\xcf\x11\x0a\x5b\xe9\xd3\x4a\xfb\xf1\x2b\xad\x15\x8f\xc5\x57\x00\x00\x00\xff\xff\x09\x7e\x83\x58\x8d\x01\x00\x00")

func _007_aclUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__007_aclUpSql,
		"007_acl.up.sql",
	)
}

func _007_aclUpSql() (*asset, error) {
	bytes, err := _007_aclUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "007_acl.up.sql", size: 397, mode: os.FileMode(436), modTime: time.Unix(1649682178, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __008_txn_processorDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\x28\xae\x2c\x2e\x49\xcd\x8d\x2f\xa9\xc8\x8b\x2f\x28\xca\x4f\x4e\x2d\x2e\xce\x2f\xb2\xe6\x02\x04\x00\x00\xff\xff\xe2\xfa\x6b\xaa\x21\x00\x00\x00")

func _008_txn_processorDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__008_txn_processorDownSql,
		"008_txn_processor.down.sql",
	)
}

func _008_txn_processorDownSql() (*asset, error) {
	bytes, err := _008_txn_processorDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "008_txn_processor.down.sql", size: 33, mode: os.FileMode(436), modTime: time.Unix(1650898596, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __008_txn_processorUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x0e\x72\x75\x0c\x71\x55\x08\x71\x74\xf2\x71\x55\xf0\x74\x53\xf0\xf3\x0f\x51\x70\x8d\xf0\x0c\x0e\x09\x56\x28\xae\x2c\x2e\x49\xcd\x8d\x2f\xa9\xc8\x8b\x2f\x28\xca\x4f\x4e\x2d\x2e\xce\x2f\x52\xd0\xe0\x52\x50\x50\x50\x48\xca\xc9\x4f\xce\x8e\xcf\x2b\xcd\x4d\x4a\x2d\x52\x48\xca\x4c\xcf\xcc\x2b\xe1\xd2\xb4\xe6\x02\x04\x00\x00\xff\xff\x70\xbe\xb7\x18\x4d\x00\x00\x00")

func _008_txn_processorUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__008_txn_processorUpSql,
		"008_txn_processor.up.sql",
	)
}

func _008_txn_processorUpSql() (*asset, error) {
	bytes, err := _008_txn_processorUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "008_txn_processor.up.sql", size: 77, mode: os.FileMode(436), modTime: time.Unix(1650898596, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __009_nonceDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\x28\xae\x2c\x2e\x49\xcd\x8d\x2f\x48\xcd\x4b\xc9\xcc\x4b\x8f\x2f\xa9\xb0\xe6\x02\x04\x00\x00\xff\xff\x4e\x9d\x9a\x73\x1e\x00\x00\x00")

func _009_nonceDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__009_nonceDownSql,
		"009_nonce.down.sql",
	)
}

func _009_nonceDownSql() (*asset, error) {
	bytes, err := _009_nonceDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "009_nonce.down.sql", size: 30, mode: os.FileMode(436), modTime: time.Unix(1651015737, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __009_nonceUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xce\x3b\x4e\xc4\x30\x10\xc6\xf1\xde\xa7\xf8\xca\x44\xca\x0d\xa8\x02\x32\x52\xc4\x53\x59\x17\x6c\x65\x0d\xf6\xb0\xb6\x94\xcc\xae\xec\x09\x8f\xdb\x23\x82\xd2\x04\xea\xdf\x3c\xfe\x37\xa3\xed\x9d\x85\xeb\xaf\xef\x2d\x86\x5b\x3c\x3e\x39\xd8\x97\xe1\xe0\x0e\xa8\x5f\x55\x79\xf6\x17\x96\x98\xe5\xe4\xf5\x13\x8d\x01\x80\x90\x28\x8b\xcf\x11\xaf\xf9\x94\x45\x21\x67\x85\x2c\xd3\xd4\xad\x4a\x31\x16\xae\x15\xef\x54\x42\xa2\xb2\xd3\x44\x35\xfd\x25\xac\x26\x67\x09\xfc\xff\xd1\x50\x98\x94\xa3\x27\x85\xe6\x99\xab\xd2\x7c\x41\xe4\x37\x5a\xa6\x9f\xd1\x8f\xa6\xdd\x2d\x3c\x8f\xc3\x43\x3f\x1e\x71\x67\x8f\x68\xb6\xe0\x6e\x8b\xeb\x7e\x7f\xb5\xa6\xbd\x32\xe6\x3b\x00\x00\xff\xff\xd8\x4e\x48\xa1\x02\x01\x00\x00")

func _009_nonceUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__009_nonceUpSql,
		"009_nonce.up.sql",
	)
}

func _009_nonceUpSql() (*asset, error) {
	bytes, err := _009_nonceUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "009_nonce.up.sql", size: 258, mode: os.FileMode(436), modTime: time.Unix(1651015737, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __010_receiptDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\x28\xae\x2c\x2e\x49\xcd\x8d\x2f\xa9\xc8\x8b\x2f\x4a\x4d\x4e\xcd\x2c\x28\x29\xb6\xe6\x02\x04\x00\x00\xff\xff\xc2\x3e\x1b\x5e\x20\x00\x00\x00")

func _010_receiptDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__010_receiptDownSql,
		"010_receipt.down.sql",
	)
}

func _010_receiptDownSql() (*asset, error) {
	bytes, err := _010_receiptDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "010_receipt.down.sql", size: 32, mode: os.FileMode(436), modTime: time.Unix(1650898596, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __010_receiptUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8d\x31\x6b\xc3\x30\x10\x46\x77\xfd\x8a\x6f\xb4\xa1\x43\xa7\x2e\x9d\xd2\x70\x81\x40\x49\xc1\xd6\xd0\x4d\x48\xca\x11\x1f\x95\xe5\x72\x92\xc1\xfe\xf7\xc5\xae\xa7\xd2\xf5\xbd\x07\xef\xdc\xd1\xc9\x12\xec\xe9\xed\x9d\x70\xbd\xe0\xf6\x61\x41\x9f\xd7\xde\xf6\x28\x6b\xa9\x3c\xba\xba\x64\xa7\x1c\x59\xbe\x6b\x41\x63\x00\x40\xee\x08\xf2\x28\xac\xe2\xd3\xd3\x4e\xe2\xe0\x25\xbb\x5f\x2e\xb9\x22\x4f\x15\x79\x4e\x87\x0d\x69\x8a\x5f\x2e\xcf\x63\x60\xfd\xbf\xd8\x26\x83\x2f\x03\x2a\x2f\x7f\x1d\xab\x4e\xba\x8b\xa3\xf5\x21\xf1\xf6\xca\xf3\xc8\x2a\xb1\x79\x79\x6e\xd1\xd1\x85\x3a\xba\x9d\xa9\x87\xf2\x43\x4a\xd5\xb5\x91\x7b\x6b\xda\x57\x63\x7e\x02\x00\x00\xff\xff\x67\x82\x05\x9e\xe4\x00\x00\x00")

func _010_receiptUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__010_receiptUpSql,
		"010_receipt.up.sql",
	)
}

func _010_receiptUpSql() (*asset, error) {
	bytes, err := _010_receiptUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "010_receipt.up.sql", size: 228, mode: os.FileMode(436), modTime: time.Unix(1651241233, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __011_new_create_table_flowDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x4a\x4d\xcf\x2c\x2e\x29\xaa\x54\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x53\x48\x49\x2d\x4e\x2e\xca\x2c\x28\xc9\xcc\xcf\x53\x08\x73\x0c\x72\xf6\x70\x0c\xd2\x30\x34\x30\xd0\x54\xf0\xf3\x0f\x51\xf0\x0b\xf5\xf1\xb1\x06\x04\x00\x00\xff\xff\x72\x48\x33\x0c\x42\x00\x00\x00")

func _011_new_create_table_flowDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__011_new_create_table_flowDownSql,
		"011_new_create_table_flow.down.sql",
	)
}

func _011_new_create_table_flowDownSql() (*asset, error) {
	bytes, err := _011_new_create_table_flowDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "011_new_create_table_flow.down.sql", size: 66, mode: os.FileMode(436), modTime: time.Unix(1650898600, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __011_new_create_table_flowUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x4a\x4d\xcf\x2c\x2e\x29\xaa\x54\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x53\x48\x49\x2d\x4e\x2e\xca\x2c\x28\xc9\xcc\xcf\xb3\xe6\x02\x04\x00\x00\xff\xff\x99\x32\xaa\x13\x2e\x00\x00\x00")

func _011_new_create_table_flowUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__011_new_create_table_flowUpSql,
		"011_new_create_table_flow.up.sql",
	)
}

func _011_new_create_table_flowUpSql() (*asset, error) {
	bytes, err := _011_new_create_table_flowUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "011_new_create_table_flow.up.sql", size: 46, mode: os.FileMode(436), modTime: time.Unix(1651170156, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __012_chainid_scopingDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe2\x02\x01\x40\x00\x00\x00\xff\xff\x9a\x8b\x82\xf4\x05\x00\x00\x00")

func _012_chainid_scopingDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__012_chainid_scopingDownSql,
		"012_chainid_scoping.down.sql",
	)
}

func _012_chainid_scopingDownSql() (*asset, error) {
	bytes, err := _012_chainid_scopingDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "012_chainid_scoping.down.sql", size: 5, mode: os.FileMode(436), modTime: time.Unix(1651494766, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __012_chanid_scopingUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x92\x4d\x8f\xa2\x40\x10\x86\xef\xfc\x8a\x4a\x4c\x36\x6b\xa2\x7b\xda\x1b\xd9\x03\x42\x6b\xc8\x42\x63\x9a\xf6\xe0\xa9\xc3\x47\x29\x1d\xb1\x31\x74\x4f\x94\x7f\x3f\xc1\x19\x47\x44\x61\x4e\x73\xeb\x74\x55\x3d\xf5\xf1\xbe\x0b\xb2\xf2\xa9\x6d\x59\xf3\x39\x4c\x26\x13\x70\xf2\x1c\xb2\x22\x91\x4a\xc8\x1c\x4c\x05\x35\xee\xa5\x36\x75\xd3\x06\x2d\x27\xe0\x84\x01\x77\x16\x01\xb9\x07\x1c\xcf\x03\x37\x0a\x36\x21\xbd\x17\xa6\x72\x2f\x95\xf9\xa0\xc6\x68\x00\x2f\x52\x1b\xa9\xf6\x50\x57\x67\xdd\x62\x99\x54\x07\x4c\x1b\xf8\x05\xa6\x40\x05\xbb\xaa\xce\xb0\x7d\x82\xc2\x33\x64\x55\x59\xbe\x1d\x55\x9b\xa7\x2a\x03\x29\x02\xdd\x04\xc1\x1f\x6b\xb3\xf6\x1c\xde\xe9\x1c\x13\xfe\xd5\xf2\xdf\x5f\x7b\x60\xbc\xeb\x67\x7f\xc0\xb6\x94\x46\xfc\x0a\xb6\x2d\xeb\xa1\x54\x37\xda\xe0\x51\x24\x59\x09\x1e\x8b\xd6\xe0\x46\x34\xe6\xcc\xf1\x29\xef\x84\x84\x49\xd2\x12\x85\xcc\xc5\xee\x80\x8d\xfd\x0a\x60\x2e\x4a\xd4\x98\xa1\x3c\x19\x3d\x44\xea\xe6\xf4\x91\xaf\xf7\x19\x02\xb5\xb5\x5a\x9c\x9e\x86\x79\xd0\x69\xcd\xfc\xd0\x61\x5b\xf8\x4f\xb6\xf0\xfb\x76\x8c\x19\xc8\x7c\x3a\xec\x80\xce\x39\xfa\x1e\xe8\x84\xc6\x5c\xf0\xa9\x5b\x27\x7b\x4c\xb9\x2e\xf4\x87\xb4\x7b\xbe\x52\x6f\x93\x81\x3b\xdd\x04\x9a\x41\x56\x29\x53\x57\x65\x89\xf5\x74\x14\xf4\xba\xff\x8d\xf8\xa8\x38\x2c\x23\x46\xfc\x15\x1d\xea\x3a\x05\x46\x96\x84\x11\xea\x92\xf8\x2e\xeb\x93\x8c\xdf\x39\x71\x6c\xbf\x8b\x12\x45\xa2\x8b\x16\xe3\x46\x61\xe8\x73\xfb\x3d\x00\x00\xff\xff\xb4\xaa\x32\xf3\x1f\x04\x00\x00")

func _012_chanid_scopingUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__012_chanid_scopingUpSql,
		"012_chanid_scoping.up.sql",
	)
}

func _012_chanid_scopingUpSql() (*asset, error) {
	bytes, err := _012_chanid_scopingUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "012_chanid_scoping.up.sql", size: 1055, mode: os.FileMode(436), modTime: time.Unix(1651494766, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __013_chainid_rename_tablesDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe2\x02\x01\x40\x00\x00\x00\xff\xff\x9a\x8b\x82\xf4\x05\x00\x00\x00")

func _013_chainid_rename_tablesDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__013_chainid_rename_tablesDownSql,
		"013_chainid_rename_tables.down.sql",
	)
}

func _013_chainid_rename_tablesDownSql() (*asset, error) {
	bytes, err := _013_chainid_rename_tablesDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "013_chainid_rename_tables.down.sql", size: 5, mode: os.FileMode(436), modTime: time.Unix(1651529237, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __013_chanid_rename_tablesUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xcf\x41\x4b\x03\x31\x10\x05\xe0\xfb\xfc\x8a\x77\x08\xe4\x20\x8a\x07\x2f\x12\x3c\xa4\xbb\x53\x14\xd2\x8d\xa4\x11\x05\xd1\x25\xd5\x51\x17\xdc\x54\xdb\x08\x16\x8a\xbf\x5d\x76\xdd\x83\x87\x1e\x67\xe6\x1b\x78\xaf\xf6\x50\x8a\x6a\xae\x9c\x0d\x8c\xcf\x2f\xd9\xec\x50\xe4\xbb\x18\x5a\xc9\x6b\x97\x69\xee\xc3\xb4\xbd\x6a\x08\x00\x96\xec\xb8\x8a\xd0\xd6\x45\x0e\x88\x76\xe6\x18\x1a\xfb\x3d\x4a\x5a\xbd\x4b\x9b\x53\x2f\xc3\xa4\x11\xb8\xb1\x0b\x46\xf4\x68\xcf\x0e\x01\xa3\x41\xf3\xe0\x17\xe8\xf2\xcb\x7a\xd3\xa7\xd2\xad\x73\xbb\x7d\x7a\x93\x3e\x9d\x8c\x74\x0b\xba\xbd\xe4\xc0\xff\x1f\x7f\xa0\x1f\xdb\xfb\xd3\xe3\xf3\x87\x23\xa5\x61\x9b\x7a\xcc\x84\x89\x94\xdd\x87\xe0\x02\x7a\x66\x97\xfc\x17\x4d\x93\xf3\xfe\x7a\x40\x7c\xc7\xd5\x4d\x9c\x2a\x1a\xe2\xa6\xc6\x70\x32\x44\x92\x9f\x0d\x29\xf5\x1b\x00\x00\xff\xff\xf8\x61\x82\x53\x0a\x01\x00\x00")

func _013_chanid_rename_tablesUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__013_chanid_rename_tablesUpSql,
		"013_chanid_rename_tables.up.sql",
	)
}

func _013_chanid_rename_tablesUpSql() (*asset, error) {
	bytes, err := _013_chanid_rename_tablesUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "013_chanid_rename_tables.up.sql", size: 266, mode: os.FileMode(436), modTime: time.Unix(1651530316, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations_testGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x54\x51\x6f\xe3\x36\x13\x7c\x26\x7f\xc5\x42\xf8\xf0\x45\x4a\x1d\xc9\x76\x12\x14\x77\x80\x1f\x62\x9f\x0f\x3d\x20\xf1\xb5\x49\x8a\x3c\x14\xad\xc3\x50\x6b\x89\xb5\x44\x2a\xe4\x2a\xb6\x51\x5c\x7f\x7b\x41\xca\x31\xec\xb4\x35\xae\x68\x9f\x0c\x50\x3b\xb3\xc3\x99\xa1\x1b\x21\x97\xa2\x40\xa8\x55\x61\x05\x29\xa3\xdd\x9c\xd0\x11\xe7\xaa\x6e\x8c\x25\x88\x39\x8b\xa4\xd1\x84\x6b\x8a\x38\x8b\xfc\x37\xa5\x8b\x88\x73\x16\x15\x8a\xca\xf6\x29\x95\xa6\xce\x7e\x15\x72\x29\xb3\xa6\x58\x67\x2f\x17\xfe\xa7\x31\xa6\x8a\x0e\x47\x1c\x59\x24\x59\xda\x2c\x50\x2c\x36\x99\xc5\xe7\x56\x59\x7c\x33\xe6\x17\xa9\x0a\x95\xc9\x0a\x73\x46\xe2\xa9\xc2\x4a\xe8\x3c\x53\x9a\xd0\x6a\x51\x65\xbb\xa3\xaf\xc3\x35\xcb\x22\x73\xcf\x95\x23\x63\x31\x53\x75\x53\x65\x6e\xe3\x08\xeb\xaf\x43\x7b\xa9\x2e\xe2\x09\xe7\x8b\x56\x4b\xb8\x47\x47\x37\x6d\x45\x4a\x96\x42\xe9\x9b\x57\xc7\x62\x82\xd3\xad\x2f\xe9\x7d\x02\xbf\x71\xd6\xda\x0a\xde\x8f\x20\xc0\xd3\xef\x8d\xa3\xc2\xa2\xfb\xf1\xf6\xfa\x41\x51\xf9\xa9\x16\x05\xc6\xd4\x83\x68\x4f\xe5\x76\x24\xea\x41\x34\xec\x0f\x87\xfd\xcb\xfe\x70\x3e\xb8\xbc\x7c\x77\x71\x11\x25\x9c\x49\x5a\x7b\xba\x6d\x0c\xe9\x58\xc8\x65\x61\x4d\xab\xf3\x38\xe1\xcc\x5b\xdd\x03\xb4\xd6\x8f\x6c\xad\x4f\x27\x46\x6b\x94\x14\x4b\x5a\xf7\xa0\xb5\x55\xc2\xd9\xd6\xee\x74\x66\xa6\xd6\x1a\xeb\x15\xa0\xb5\x09\x67\x39\x2e\xd0\x42\x07\xab\x8c\xc3\x38\xe1\x9c\xbd\x08\x0b\xb8\x46\xf9\x43\x8b\x76\x33\x31\xad\x26\x18\x81\x37\x21\x7e\xf6\x27\xe0\xc8\x2a\x5d\x24\xa0\x34\xf9\x0b\x33\x6b\x56\x61\xbf\x67\x09\x98\x5b\xb3\xea\xb6\x87\xf9\x84\xb3\x40\x69\xaa\x7c\x26\x6a\x74\x1e\xc7\x19\xf3\xaa\x47\x60\xcd\x2a\xbd\x93\x42\xc7\xff\x7f\xfd\xec\xc7\xff\x56\x2f\xb3\x48\xad\xd5\x3b\x2e\xce\xbe\x70\xce\xb2\x0c\x06\x29\x4c\x4a\x94\x4b\xa0\x52\x10\xac\x10\x4a\xf1\x82\x10\x5c\x76\xb0\x52\x54\x02\x95\xe8\x61\x10\x6b\xa3\xcf\x42\x88\x9f\x3e\x80\x93\xa6\xc1\x3c\x81\x85\xb1\xb5\xa0\x94\xb3\xa0\xf8\x73\x95\x7f\x0c\x07\xfe\x5a\x8f\x77\xd3\xeb\xe9\xe4\x1e\xa4\x37\x22\x3e\x4d\xe0\xe3\xed\xe7\x1b\x50\xba\x83\x28\xa3\xe7\x4e\x96\x58\x8b\x74\xbb\xec\xe1\xbb\xe9\xed\xb4\xdb\x3c\xd7\xa2\x46\xf8\x1d\x4e\x7e\x99\xff\xd4\x3f\x7b\xf7\xf3\x37\xff\x3b\x79\x84\x2c\x83\xab\xd9\x87\xed\x00\x6d\x1a\x1c\x9d\x8c\xaf\xee\xa6\x70\x7f\x35\xbe\x9e\x9e\x3c\x72\xf6\x7a\xb7\xe0\xfc\x18\x17\xc6\xe2\xae\x6e\x5e\xd0\x61\x34\xf1\xa1\xe2\xbd\xb0\xa7\xcf\xad\xa8\xbc\x75\x97\x83\xf3\x1e\x1c\x63\x4d\x3a\x0f\x87\x29\x8c\x8d\x71\x64\x45\x03\xdd\x4b\x81\xf0\x76\x80\x0c\xd8\x56\x07\x07\xf3\xa7\xbd\x7f\x8b\x94\xb3\x79\x57\xbf\xd1\x16\x90\xce\x70\x15\x77\xad\xdc\x35\x3c\x9d\x74\x66\xc7\x83\xf3\xf3\x6f\x93\x23\x6d\x0c\x22\xce\xf7\x83\x7c\x1f\x8e\x00\xe0\x0c\x1e\x10\x72\xa3\x4f\xa8\x0b\xf6\x54\xe8\xcd\x69\xb7\xe2\x30\xdd\x5d\x90\x7b\xb8\x80\xc0\xb5\x90\x54\x6d\xc2\xa0\xf3\xb1\x88\x3a\x34\xdb\x2c\x20\x57\x8b\x05\x5a\xd4\xf4\xa7\xbe\x68\x5c\x6d\x19\x41\xb8\xae\x55\x39\x28\x0d\x8d\xf1\xdd\x1f\xa4\x6f\xc2\xba\x5a\x10\xda\x7f\x97\x55\xff\x4d\x52\x87\x94\xde\xa3\xc0\x31\xc3\xd5\x7f\xdd\xd0\x8b\x5d\x47\x41\xe8\xfc\x48\x3f\x35\xae\xfe\xe9\x95\x77\x72\xff\xea\xca\xc7\x9a\xd9\x83\x23\xdb\x12\xfe\x85\xff\x11\x00\x00\xff\xff\xcc\xcc\xf7\x60\xc3\x06\x00\x00")

func migrations_testGoBytes() ([]byte, error) {
	return bindataRead(
		_migrations_testGo,
		"migrations_test.go",
	)
}

func migrations_testGo() (*asset, error) {
	bytes, err := migrations_testGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations_test.go", size: 1731, mode: os.FileMode(436), modTime: time.Unix(1651529237, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"001_init.down.sql":                  _001_initDownSql,
	"001_init.up.sql":                    _001_initUpSql,
	"002_add_type_column.down.sql":       _002_add_type_columnDownSql,
	"002_add_type_column.up.sql":         _002_add_type_columnUpSql,
	"003_auth.down.sql":                  _003_authDownSql,
	"003_auth.up.sql":                    _003_authUpSql,
	"004_add_last_seen.down.sql":         _004_add_last_seenDownSql,
	"004_add_last_seen.up.sql":           _004_add_last_seenUpSql,
	"005_mul_changes.down.sql":           _005_mul_changesDownSql,
	"005_mul_changes.up.sql":             _005_mul_changesUpSql,
	"006_rename_system_tables.down.sql":  _006_rename_system_tablesDownSql,
	"006_rename_system_tables.up.sql":    _006_rename_system_tablesUpSql,
	"007_acl.down.sql":                   _007_aclDownSql,
	"007_acl.up.sql":                     _007_aclUpSql,
	"008_txn_processor.down.sql":         _008_txn_processorDownSql,
	"008_txn_processor.up.sql":           _008_txn_processorUpSql,
	"009_nonce.down.sql":                 _009_nonceDownSql,
	"009_nonce.up.sql":                   _009_nonceUpSql,
	"010_receipt.down.sql":               _010_receiptDownSql,
	"010_receipt.up.sql":                 _010_receiptUpSql,
	"011_new_create_table_flow.down.sql": _011_new_create_table_flowDownSql,
	"011_new_create_table_flow.up.sql":   _011_new_create_table_flowUpSql,
	"012_chainid_scoping.down.sql":       _012_chainid_scopingDownSql,
	"012_chanid_scoping.up.sql":          _012_chanid_scopingUpSql,
	"013_chainid_rename_tables.down.sql": _013_chainid_rename_tablesDownSql,
	"013_chanid_rename_tables.up.sql":    _013_chanid_rename_tablesUpSql,
	"migrations_test.go":                 migrations_testGo,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"001_init.down.sql":                  &bintree{_001_initDownSql, map[string]*bintree{}},
	"001_init.up.sql":                    &bintree{_001_initUpSql, map[string]*bintree{}},
	"002_add_type_column.down.sql":       &bintree{_002_add_type_columnDownSql, map[string]*bintree{}},
	"002_add_type_column.up.sql":         &bintree{_002_add_type_columnUpSql, map[string]*bintree{}},
	"003_auth.down.sql":                  &bintree{_003_authDownSql, map[string]*bintree{}},
	"003_auth.up.sql":                    &bintree{_003_authUpSql, map[string]*bintree{}},
	"004_add_last_seen.down.sql":         &bintree{_004_add_last_seenDownSql, map[string]*bintree{}},
	"004_add_last_seen.up.sql":           &bintree{_004_add_last_seenUpSql, map[string]*bintree{}},
	"005_mul_changes.down.sql":           &bintree{_005_mul_changesDownSql, map[string]*bintree{}},
	"005_mul_changes.up.sql":             &bintree{_005_mul_changesUpSql, map[string]*bintree{}},
	"006_rename_system_tables.down.sql":  &bintree{_006_rename_system_tablesDownSql, map[string]*bintree{}},
	"006_rename_system_tables.up.sql":    &bintree{_006_rename_system_tablesUpSql, map[string]*bintree{}},
	"007_acl.down.sql":                   &bintree{_007_aclDownSql, map[string]*bintree{}},
	"007_acl.up.sql":                     &bintree{_007_aclUpSql, map[string]*bintree{}},
	"008_txn_processor.down.sql":         &bintree{_008_txn_processorDownSql, map[string]*bintree{}},
	"008_txn_processor.up.sql":           &bintree{_008_txn_processorUpSql, map[string]*bintree{}},
	"009_nonce.down.sql":                 &bintree{_009_nonceDownSql, map[string]*bintree{}},
	"009_nonce.up.sql":                   &bintree{_009_nonceUpSql, map[string]*bintree{}},
	"010_receipt.down.sql":               &bintree{_010_receiptDownSql, map[string]*bintree{}},
	"010_receipt.up.sql":                 &bintree{_010_receiptUpSql, map[string]*bintree{}},
	"011_new_create_table_flow.down.sql": &bintree{_011_new_create_table_flowDownSql, map[string]*bintree{}},
	"011_new_create_table_flow.up.sql":   &bintree{_011_new_create_table_flowUpSql, map[string]*bintree{}},
	"012_chainid_scoping.down.sql":       &bintree{_012_chainid_scopingDownSql, map[string]*bintree{}},
	"012_chanid_scoping.up.sql":          &bintree{_012_chanid_scopingUpSql, map[string]*bintree{}},
	"013_chainid_rename_tables.down.sql": &bintree{_013_chainid_rename_tablesDownSql, map[string]*bintree{}},
	"013_chanid_rename_tables.up.sql":    &bintree{_013_chanid_rename_tablesUpSql, map[string]*bintree{}},
	"migrations_test.go":                 &bintree{migrations_testGo, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
